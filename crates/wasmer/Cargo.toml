[package]
name = "wai-bindgen-wasmer"
description = "Generate WAI glue for a Rust Wasmer host"
authors.workspace = true
edition.workspace = true
homepage.workspace = true
license.workspace = true
readme.workspace = true
repository.workspace = true
rust-version.workspace = true
version.workspace = true

[dependencies]
anyhow = "1.0"
async-trait = { version = "0.1.50", optional = true }
bitflags = "1.2"
once_cell = "1.13"
thiserror = "1.0"
tracing-lib = { version = "0.1.26", optional = true, package = "tracing" }
wai-bindgen-wasmer-impl = { path = "../wasmer-impl", version = "0.2.1" }


# @TODO-WASMER `data_unchecked`, and `data_unchecked_mut` and other functions defined with `unimplemented!`
# @TODO-WASMER can't be called or generated inside `wasm`. 


# @TODO-WASMER: The `wasmer` crate has enabled the cargo feature `sys-default` by default
# @TODO-WASMER: but it has to be disabled to be compilable for the `wasm` target.
# @TODO-WASMER: Perhaps all features should be configurable from the dependent crate (?).
# @TODO-WASMER: original code:
# wasmer = "3.0.0-rc.1"
# @TODO-WASMER:: temporary new code (Resolve all @TODO-WASMER in this branch):
wasmer = { git = "https://github.com/MartinKavik/wasmer.git", branch = "fix/browser_wasm_module_compilation", features = ["js-default"], default-features = false } 
# @TODO-WASMER:: new code:
# wasmer = { version = "3.0.1", features = ["js-default"], default-features = false }
# @TODO-WASMER: Remoe the line below, it's useful only for testing.
# wasmer = { path = "../../../wasmer/lib/api", features = ["js-default"], default-features = false }

[features]
# Enables generated code to emit events via the `tracing` crate whenever wasm is
# entered and when native functions are called. Note that tracin is currently
# only done for imported functions.
tracing = ["tracing-lib", "wai-bindgen-wasmer-impl/tracing"]

# Enables async support for generated code, although when enabled this still
# needs to be configured through the macro invocation.
async = ["async-trait", "wai-bindgen-wasmer-impl/async"]
